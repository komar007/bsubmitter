#!/bin/bash

# Runs a single test on a single task from a single user.
# Sets $testname.err according to the runtime error, or 'OK' on no error.
# Leaves program's solution in $testname.sol, and saves execution time
# in $testname.time
# Returns execution time if no error occured or error code otherwise.

. ../config.gen

user=$1
task=$2
testname=$3
limit=$4

exe=../users/homes/$user/$task/$task.e
in=../tasks/$task/in/$testname.in
output=../users/homes/$user/$task/$testname.sol
timefile=../users/homes/$user/$task/$testname.time
errfile=../users/homes/$user/$task/$testname.err

(/usr/bin/time -p $exe < $in > $output 2> ./.t ; sleep 0.1; killall -q sleep) &
#(/usr/bin/time -p sleep 3 2> ./.t ; killall sleep) &
pid=`jobs -p %+`
if [[ `sleep $limit && /bin/kill $pid && echo a` ]]; then 
	echo "$limit/$limit" > $timefile
	echo "TL" > $errfile
	echo TL
	exit 1
fi
echo `grep real ./.t | egrep -o '[^a-z ]+'`/$limit > $timefile
rm -fr ./.t
echo "OK" > $errfile
cat $timefile 

